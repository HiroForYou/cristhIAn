{"data":{"allSmallprojectsJson":{"edges":[{"node":{"id":"b04c2ca4-d5c3-5752-9714-3e9547a7d288","title":"Chatbot with PyTorch ðŸ¤–","links":{"demo":"https://github.com/HiroForYou/PyTorch-Chatbot/raw/master/src/demo.gif","src":"https://github.com/HiroForYou/PyTorch-Chatbot"},"description":"The architecture used was a feedforward network (very simple). The network receives a input vector as a result of preprocessing (length equal to size of bag of words). Subsequently, it shows the user a random response (from the json file) based on that category."}},{"node":{"id":"08c1ce39-de37-508a-b146-1c445f89234a","title":"Snake with PyTorch ðŸ”¥","links":{"demo":"https://github.com/HiroForYou/Snake-PyTorch/raw/master/src/demo.gif","src":"https://github.com/HiroForYou/Snake-PyTorch"},"description":"The agent will learn to find the right way to get to his reward (food); to do this, it will use DQN techniques, which combine Bellman's equations and neural networks for estimating the Q values. The agent was built with PyTorch, while the game environment was built with PyGame (if you want you can opt for GYM)."}},{"node":{"id":"89c19372-8c73-5c16-a83c-96c2906875be","title":"Reinforced Learning","links":{"demo":"https://colab.research.google.com/github/HiroForYou/RL-Algorithms/blob/master/main.ipynb","src":"https://github.com/HiroForYou/RL-Algorithms"},"description":"Models of RL using GYM and Pytorch."}},{"node":{"id":"36941d03-2876-57af-873f-a2563d559229","title":"faceAcecom","links":{"demo":"https://github.com/AcecomFCUNI/faceAcecom/raw/master/faceAcecomV1/steps.gif","src":"https://github.com/AcecomFCUNI/faceAcecom"},"description":"Summer 2020 project on facial recognition with Tensorflow."}},{"node":{"id":"cb5e19a3-81b6-5602-a222-5923001db44c","title":"Deep Learning Collection","links":{"demo":"https://github.com/HiroForYou/Deep-Learning-Collection","src":"https://github.com/HiroForYou/Deep-Learning-Collection"},"description":"Implementations to learn about ML, DL, PyTorch and TensorFlow from basic to advanced level."}}]}}}